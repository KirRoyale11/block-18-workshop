UNIT TESTS PROMPT 1:
 "A function called "multiplication" that returns the product of the two input numbers."
 -Expect multiplication(2,3) to be a number
 -Expect multiplication(2,3) to be equal to 6
 -Expect multiplication("b", 3) to be an error
 -Expect multiplication("b", "c") to be an error
 -Expect multiplication(2, "c") to be an error

 UNIT TESTS PROMPT 2:
 "A function called "concatOdds" takes two arrays of integers as arguments. It should return a single array that only contains the odd numbers, in ascending order, from both of the arrays.
Example: concatOdds([3, 2, 1], [9, 1, 1, 1, 4, 15, -1])
...should result in [-1, 1, 3, 9, 15]"
-Expect concatOdds([3,2], [9,8,7]) to be a single array
-Expect concatOdds([3,2], [9,8,7]) to consist of numbers
-Expect concatOdds([3,2], [9,8,7]) to list numbers in ascending order
-Expect concatOdds([3,2], [9,8,7]) to return only odd numbers
-Expect concatOdds([3,2], [9,8,7]) to exclude any even numbers
-Expect concatOdds([3,3,2], [9,9,8,7]) to be [3, 7, 9]
-Expect concatOdds([2, 2, 4], [6, 8]) to return an empty array
-Expect concatOdds([true], [3,3,2]) to return an error
-Expect concatOdds(["7", "8", "9"], [3,3,2]) to return an error
-Expect concatOdds(true,3,3,2) to return an error
-Expect concatOdds(3,2,9,8,7) to return an error
-Expect concatOdds(3,2, [9,8,7]) to return an error

FUNCTIONAL TESTS PROMPT 1:
"A shopping cart checkout feature that allows a user to check out as a guest (without an account), 
or as a logged-in user. They should be allowed to do either, 
but should be asked if they want to create an account or log in if they check out as a guest."
FORMAT:
-When a user [does something with some parameters], [some thing should happen]

-When a user clicks "Check Out" and they are logged in, they should be taken to a shipping/payment page with pre-loaded info
associated with their account
-When a user clicks "Check Out" and they are not logged in, they should receive a prompt asking if they would like to log in or create an account
-When a user clicks "Create Account" and information is valid, they should receive a "Create Password" prompt
    -When a user clicks "Confirm Password" and both password fields match, they should continue to a shipping/payment 
    page with empty inputs
    -When a user clicks "Confirm Password" and both password fields to not match, they should recieve an error and 
    be prompted to check their inputs
    -When a user clicks "Confirm Password" and one or both fields is empty, they should receive an error and be prompted to try again
-When a user clicks "Create Account" and one or more fields contains the incorrect info type, they should recieve an error
-When a user clicks "Create Account" and one or more fields is empty, they should receive an error
-When a user clicks "Continue as Guest", they should be taken to a shipping/payment page with empty inputs
-When a user clicks "Log In" and they enter correct information, they should be taken to a shipping/payment page
 with pre-loaded info associated with their account 
-When a user clicks "Log In" but has filled out an incorrect login or password, 
they should be shown an error and prompted to sign up if they have not yet.



